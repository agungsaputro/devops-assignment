name : Docker-CI
trigger:
  branches:
    include:
      - master
 
pool:
  vmImage: 'ubuntu-latest'
 
variables:
  AzureSubscription: 'AzureServiceConnection' # Name of the Service Connection
  ApiName: 'devops-assigment'
  ClusterResourceGroup: MicroserviceDemo  
  ChartPackage: '$(Build.ArtifactStagingDirectory)/$(ApiName)-$(Build.BuildNumber).tgz'  
  ChartPath: 'CustomerApi/CustomerApi/charts/$(ApiName)'
  HelmVersion: 3.5.0
  ImageName: 'agung1ds/devops-assignment:$(Build.BuildId)'
  K8sNamespace: '$(ApiName)-test'
  KubernetesCluster: 'microservice-aks'
 
stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build and push Docker image
    steps:
    - task: Docker@1
      displayName: 'Build the Docker image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'dockerhub'
        command: 'Build an image'
        dockerFile: '**/Dockerfile'
        imageName: '$(ImageName)'
        includeLatestTag: true
        useDefaultContext: false
        buildContext: '.'
     
    - task: Docker@1
      displayName: 'Push the Docker image to Dockerhub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'dockerhub'
        command: 'Push an image'
        imageName: '$(ImageName)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- stage: Package
  displayName: 'Package Helm Chart'
  jobs:
    - job: Helm
      displayName: 'Build and Push Helm Chart'
      steps:
        - task: HelmInstaller@0
          displayName: 'Install Helm $(HelmVersion)'
          inputs:
            helmVersion: $(HelmVersion)
            checkLatestHelmVersion: false
            installKubectl: true
          condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))   